# Environment
# source ~/.env
export PATH="$HOME/.local/bin:$PATH"

# need this for some stuff below
autoload -Uz compinit && compinit

# Set up the prompt
function git_branch_name()
{
  branch=$(git symbolic-ref HEAD 2> /dev/null | awk 'BEGIN{FS="/"} {print $NF}')
  if [[ $branch == "" ]];
  then
    :
  else
    echo '('$branch') '
  fi
}
setopt prompt_subst
#prompt='%2/ $(git_branch_name)$ '
prompt='%2/ $(git_branch_name)$ '

setopt histignorealldups sharehistory

# Use vi keybinds
bindkey -v
bindkey -M viins 'jj' vi-cmd-mode

# Keep 5000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=5000
SAVEHIST=5000
HISTFILE=~/.zsh_history

# aliases
alias ll='ls -alF -G'
alias la='ls -A'
alias l='ls -CF'
# Only set ff alias if bat is available
if command -v bat >/dev/null 2>&1; then
  alias ff="fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'"
else
  alias ff="fzf --preview 'head -n 500 {}'"
fi
alias fp="nvim (ff)"
alias c="cd"
alias ..='cd ..'
alias vim="nvim"
# Only set icat alias if kitty is available
if command -v kitty >/dev/null 2>&1; then
  alias icat="kitty +kitten icat"
fi

# Git 
alias gs='git status'
alias ga='git add'
alias gau='git add -u'
alias gp='git push'
alias gc='git commit'
alias gb='git branch'

# autojump - only if zoxide is available
if command -v zoxide >/dev/null 2>&1; then
  eval "$(zoxide init zsh)"
fi

# set up fzf key bindings and fuzzy completion
# need current fzf for this to work
#source <(fzf --zsh)

# rust - only if cargo is available
if [[ -f "$HOME/.cargo/env" ]]; then
  . "$HOME/.cargo/env"
fi

# UV - only if uv is available
if command -v uv >/dev/null 2>&1; then
  eval "$(uv generate-shell-completion zsh)"
  # need this nonsense to enable pass through completions
  _uv_run_mod() {
      if [[ "$words[2]" == "run" && "$words[CURRENT]" != -* ]]; then
          _arguments '*:filename:_files'
      else
          _uv "$@"
      fi
  }
  compdef _uv_run_mod uv
fi

# UVX - only if uvx is available
if command -v uvx >/dev/null 2>&1; then
  eval "$(uvx --generate-shell-completion zsh)"
fi

# pyenv - only if pyenv is available
if command -v pyenv >/dev/null 2>&1; then
  export PYENV_ROOT="$HOME/.pyenv"
  [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
fi

# poetry
fpath+=~/.zfunc

# neovim - only if the path exists
if [[ -d "$HOME/.local/neovim/bin" ]]; then
  export PATH="$HOME/.local/neovim/bin:$PATH"
fi

# NVM - use XDG-aware path with fallback
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# fish auto suggestions - only if the plugin exists
if [[ -f ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
  source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# fish syntax highlighting - only if the plugin exists
if [[ -f ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
  source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# zsh functions
fpath+=~/.zfunc

# pull in non version control stuff
[ -f ~/.zshrc.local ] && source ~/.zshrc.local 